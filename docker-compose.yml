version: '3.8'
services:
  #  api:
  #    build:
  #      context: .
  #      dockerfile: ./Dockerfile
  #    ports:
  #      - '3000:3000'
  #    env_file:
  #      - server/.env
  #    environment:
  #      - NODE_ENV:${NODE_ENV}
  #      - NODE_PORT:${NODE_PORT}
  #      - DB_DIALECT:${DB_DIALECT}
  #      - DB_HOST=${DB_HOST}
  #      - DB_NAME=${DB_NAME}
  #      - DB_PASSWORD=${DB_PASSWORD}
  #      - DB_PORT=${DB_PORT}
  #      - DB_USER=${DB_USER}
  #      - UI_ORIGIN=${UI_ORIGIN}
  #      - INFURA_ID=${INFURA_ID}
  #      - SECRET_COOKIE_PASSWORD=${SECRET_COOKIE_PASSWORD}
  #      - COOKIE_NAME=${COOKIE_NAME}
  #    depends_on:
  #      - db
  #      - cache
  #      - jaeger
  db:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
  cache:
    image: redis:latest
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - cache-data:/var/lib/redis
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - '16686:16686'
      - '4318:4318'
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - LOG_LEVEL=debug
    volumes:
      - jaeger-data:/var/lib/jaeger
volumes:
  db:
    driver: local
  cache-data:
    driver: local
  jaeger-data:
    driver: local
